# Generated by Django 5.1.1 on 2024-12-30 15:36

import ckeditor.fields
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("config", "0001_initial"),
        ("people", "0002_remove_writer_organization_remove_writer_person_and_more"),
        ("project", "0001_initial"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(editable=False, max_length=320, unique=True)),
                ("date_publish", models.DateField(blank=True, null=True)),
                ("description", ckeditor.fields.RichTextField()),
                ("image", models.ImageField(upload_to="publication/")),
                ("image_credit", models.TextField(blank=True, null=True)),
                (
                    "cover",
                    models.ImageField(
                        blank=True, null=True, upload_to="publication/cover/"
                    ),
                ),
                (
                    "file",
                    models.FileField(blank=True, upload_to="publication/documents/"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("publish", models.BooleanField(default=False)),
                ("highlight", models.BooleanField(default=False)),
                ("viewed", models.PositiveIntegerField(default=0)),
                ("download_count", models.PositiveIntegerField(default=0)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_publications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "editor",
                    models.ManyToManyField(
                        blank=True,
                        related_name="edited_publications",
                        to="people.person",
                    ),
                ),
                (
                    "partners",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"category": "Partner"},
                        related_name="partnered_publications",
                        to="people.person",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="publications",
                        to="project.project",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                ("topic", models.ManyToManyField(blank=True, to="config.option")),
                (
                    "updated_by",
                    models.ForeignKey(
                        help_text="User who last updated this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publication",
                "verbose_name_plural": "Publications",
                "ordering": ["-date_publish", "title"],
            },
        ),
        migrations.CreateModel(
            name="PublicationAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "is_corresponding",
                    models.BooleanField(
                        default=False,
                        help_text="Marks this author as a corresponding author",
                    ),
                ),
                ("affiliation", models.CharField(blank=True, max_length=255)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="people.person"
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="publications.publication",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "unique_together": {("publication", "author")},
            },
        ),
        migrations.AddField(
            model_name="publication",
            name="authors",
            field=models.ManyToManyField(
                related_name="authored_publications",
                through="publications.PublicationAuthor",
                to="people.person",
            ),
        ),
        migrations.CreateModel(
            name="PublicationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the record was created",
                        verbose_name="Created at",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the record was last updated",
                        verbose_name="Updated at",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("slug", models.SlugField(editable=False, max_length=200, unique=True)),
                (
                    "background",
                    models.ImageField(blank=True, null=True, upload_to="pub_category/"),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        help_text="User who last updated this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Publication Category",
                "verbose_name_plural": "Publication Categories",
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="publication",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="publications",
                to="publications.publicationcategory",
            ),
        ),
    ]
