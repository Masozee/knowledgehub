# Generated by Django 5.1.1 on 2024-10-23 07:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finance', '0004_currency_alter_budget_additional_amount_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='finance.budget')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='finance.currency')),
                ('project_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('progress_type', models.CharField(choices=[('milestone', 'Milestone'), ('deliverable', 'Deliverable'), ('objective', 'Objective')], max_length=20)),
                ('description', models.TextField()),
                ('due_date', models.DateField()),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('status', models.PositiveSmallIntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('notes', models.TextField(blank=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='progress_attachments/')),
                ('responsible_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_items', to='project.project')),
            ],
            options={
                'ordering': ['due_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('event_type', models.CharField(choices=[('conference', 'Conference'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('training', 'Training'), ('outreach', 'Outreach Event')], max_length=20)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('target_audience', models.CharField(max_length=255)),
                ('expected_participants', models.PositiveIntegerField()),
                ('actual_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('organizers', models.ManyToManyField(related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('pos_allocation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.posallocation')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='project.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectGrant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], max_length=20)),
                ('submission_deadline', models.DateField()),
                ('requirements', models.TextField()),
                ('reporting_frequency', models.CharField(max_length=50)),
                ('grant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='finance.grant')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_grants', to='project.project')),
            ],
        ),
        migrations.CreateModel(
            name='GrantReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('narrative', models.TextField()),
                ('financial_report', models.FileField(upload_to='grant_reports/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'xlsx', 'docx'])])),
                ('approved', models.BooleanField(default=False)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project_grant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='project.projectgrant')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('researcher', 'Researcher'), ('coordinator', 'Coordinator'), ('analyst', 'Analyst'), ('volunteer', 'Volunteer')], max_length=20)),
                ('join_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('time_commitment', models.PositiveIntegerField(help_text='Hours per week')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pos_allocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.posallocation')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project')),
            ],
            options={
                'unique_together': {('project', 'member')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='team_members',
            field=models.ManyToManyField(related_name='project_assignments', through='project.ProjectMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('publication_type', models.CharField(choices=[('journal', 'Journal Article'), ('conference', 'Conference Paper'), ('report', 'Technical Report'), ('book', 'Book'), ('chapter', 'Book Chapter')], max_length=20)),
                ('publisher', models.CharField(max_length=255)),
                ('publication_date', models.DateField()),
                ('doi', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('citation', models.TextField()),
                ('abstract', models.TextField()),
                ('authors', models.ManyToManyField(related_name='publications', to=settings.AUTH_USER_MODEL)),
                ('pos_allocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.posallocation')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='publications', to='project.project')),
            ],
        ),
        migrations.CreateModel(
            name='ResearchData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('data_type', models.CharField(choices=[('survey', 'Survey Data'), ('interview', 'Interview Data'), ('observation', 'Observation Data'), ('experimental', 'Experimental Data'), ('secondary', 'Secondary Data')], max_length=20)),
                ('collection_date', models.DateField()),
                ('description', models.TextField()),
                ('methodology', models.TextField()),
                ('storage_location', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='research_data/')),
                ('metadata', models.JSONField()),
                ('pos_allocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.posallocation')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_data', to='project.project')),
                ('responsible_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
